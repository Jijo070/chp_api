###########
# BUILDER #
###########

# first stage of build to pull repos
FROM ubuntu as intermediate

# set work directory
WORKDIR /usr/src/chp_api

# install git
RUN apt-get update \
	&& apt-get install -y git python3-pip python3-dev dos2unix

# add credentials on build
ARG SSH_PRIVATE_KEY
ARG SSH_PUBLIC_KEY
RUN mkdir -p /root/.ssh/ \
	&& chmod 0700 /root/.ssh \
	&& ssh-keyscan intuition.thayer.dartmouth.edu >> ~/.ssh/known_hosts \
	&& chmod 644 ~/.ssh/known_hosts

# add keys (use in windows powershell)
COPY "${SSH_PRIVATE_KEY}" /root/.ssh/
COPY "${SSH_PUBLIC_KEY}" /root/.ssh/
RUN chmod 600 /root/.ssh/id_rsa \
	&& chmod 600 /root/.ssh/id_rsa.pub
RUN chmod 600 /root/.ssh/id_rsa.pub

# add keys (use in Linux)
#RUN echo "${SSH_PRIVATE_KEY}" > /root/.ssh/id_rsa \
#	&& echo "${SSH_PUBLIC_KEY}" > /root/.ssh/id_rsa.pub \
#	&& chmod 600 /root/.ssh/id_rsa \
#	&& chmod 600 /root/.ssh/id_rsa.pub

#RUN ssh cyakaboski@intuition.thayer.dartmouth.edu -t -t -v -o StrictHostKeyChecking=no

RUN git clone ssh://git@intuition.thayer.dartmouth.edu/home/public/git/modules/PyBKB.git
RUN git clone --depth 1 --single-branch --branch master ssh://git@intuition.thayer.dartmouth.edu/home/public/git/projects/ChpData.git
RUN git clone --single-branch --branch master https://github.com/di2ag/chp.git
RUN git clone --single-branch --branch main https://github.com/di2ag/chp_client.git
RUN git clone --single-branch --branch master https://github.com/di2ag/trapi_model.git
RUN git clone https://github.com/di2ag/reasoner-validator.git

# lint
RUN pip3 install --upgrade pip
RUN pip3 install flake8 wheel
COPY . .

# remove ssh key files (used in windows)
RUN rm "${SSH_PRIVATE_KEY}" && rm "${SSH_PUBLIC_KEY}"

#RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip3 wheel --no-cache-dir --no-deps --wheel-dir /usr/src/chp_api/wheels -r requirements.txt

# gather pybkb wheel
RUN cd PyBKB && python3 setup.py bdist_wheel && cd dist && cp pybkb-*-py3-none-any.whl /usr/src/chp_api/wheels

# gather chp wheel
RUN cd chp && python3 setup.py bdist_wheel && cd dist && cp chp-*-py3-none-any.whl /usr/src/chp_api/wheels

# gather client wheel
RUN cd chp_client && python3 setup.py bdist_wheel && cd dist && cp chp_client-*-py3-none-any.whl /usr/src/chp_api/wheels

# gather chp-data wheel
RUN cd ChpData && python3 setup.py bdist_wheel && cd dist && cp chp_data-*-py3-none-any.whl /usr/src/chp_api/wheels

# gather trapi model wheel
RUN cd trapi_model && python3 setup.py bdist_wheel && cd dist && cp trapi_model-*-py3-none-any.whl /usr/src/chp_api/wheels

# gather reasoner-validator wheel
RUN cd reasoner-validator && python3 setup.py bdist_wheel && cd dist && cp reasoner_validator-*-py3-none-any.whl /usr/src/chp_api/wheels

#########
# FINAL #
#########

#pull official base image
FROM ubuntu:20.04

# add app user
RUN groupadd chp_api && useradd -ms /bin/bash -g chp_api chp_api

# create the appropriate directories
ENV HOME=/home/chp_api
ENV APP_HOME=/home/chp_api/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV TZ=America/New_York

# set ARGs
ARG DEBIAN_FRONTEND=noninterative

# install dependencies
RUN apt-get update \
	&& apt-get install -y python3-pip graphviz openmpi-bin libopenmpi-dev build-essential libssl-dev libffi-dev python3-dev 
RUN apt-get install -y libgraphviz-dev python3-pygraphviz
RUN apt-get install -y libpq-dev
RUN apt-get install -y netcat

# copy repo to new image
COPY --from=intermediate /usr/src/chp_api/wheels /wheels
COPY --from=intermediate /usr/src/chp_api/requirements.txt .
RUN pip3 install --upgrade pip
RUN pip3 install --no-cache /wheels/*
#RUN pip3 install linkml-model

# copy entry point
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY ./chp_api $APP_HOME/chp_api
COPY ./chp_handler $APP_HOME/chp_handler
COPY ./manage.py $APP_HOME
COPY ./gunicorn.config.py $APP_HOME 

# chown all the files to the app user
RUN chown -R chp_api:chp_api $APP_HOME

# change to the app user
USER chp_api

# run entrypoint.sh
ENTRYPOINT ["/home/chp_api/web/entrypoint.prod.sh"]
